apply plugin: 'com.android.library'

android {
    def KEY_PATH = '';
    def AAR_PATH = '';

    if (System.getProperty('os.name').contains('Windows')) {
        KEY_PATH = '' + rootDir + '\\key\\';
        AAR_PATH = '' + rootDir + '\\..\\MemoUnity\\Assets\\Plugins\\Android\\';
    } else {
        KEY_PATH = '' + rootDir + '/key/';
        AAR_PATH = '' + rootDir + '/../MemoUnity/Assets/Plugins/Android/';
    }

    assembleRelease.doLast {
        copy {
            from('build/outputs/aar') {
                include '*-debug.aar'
            }
            into AAR_PATH
        }
    }

    compileSdkVersion 27
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories{
      flatDir{
              dirs 'libs'
       }
 }

dependencies {
    provided fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:25.+'

    // implementation 'com.github.esafirm.android-image-picker:imagepicker:x.y.z'
    // // for experimental rx picker
    // implementation 'com.github.esafirm.android-image-picker:rximagepicker:x.y.z'
    // // If you have a problem with Glide, please use the same Glide version or simply open an issue
    // implementation 'com.github.bumptech.glide:glide:4.5.0'
}

task copyExternalLibsToLibsFolder(type: Copy) {
   from configurations.compile
   into 'libs'
}
